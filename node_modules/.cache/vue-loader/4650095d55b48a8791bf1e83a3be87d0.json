{"remainingRequest":"D:\\Code Files\\VueFile\\阶段工作\\基于GIS的城市流动摊贩管理系统\\webgis-mobil1.1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Code Files\\VueFile\\阶段工作\\基于GIS的城市流动摊贩管理系统\\webgis-mobil1.1\\src\\views\\EchartsPage.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Code Files\\VueFile\\阶段工作\\基于GIS的城市流动摊贩管理系统\\webgis-mobil1.1\\src\\views\\EchartsPage.vue","mtime":1709884050669},{"path":"D:\\Code Files\\VueFile\\阶段工作\\基于GIS的城市流动摊贩管理系统\\webgis-mobil1.1\\node_modules\\css-loader\\dist\\cjs.js","mtime":1637922544066},{"path":"D:\\Code Files\\VueFile\\阶段工作\\基于GIS的城市流动摊贩管理系统\\webgis-mobil1.1\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1637922548447},{"path":"D:\\Code Files\\VueFile\\阶段工作\\基于GIS的城市流动摊贩管理系统\\webgis-mobil1.1\\node_modules\\postcss-loader\\src\\index.js","mtime":1637922545893},{"path":"D:\\Code Files\\VueFile\\阶段工作\\基于GIS的城市流动摊贩管理系统\\webgis-mobil1.1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637922542348},{"path":"D:\\Code Files\\VueFile\\阶段工作\\基于GIS的城市流动摊贩管理系统\\webgis-mobil1.1\\node_modules\\vue-loader\\lib\\index.js","mtime":1637922546721}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudXNlci1kYXRhLW1hbmFnZSAubWFuaSB7DQogIHBhZGRpbmc6IDE1cHg7DQp9DQoNCi50b3AtYm94IHsNCiAgcGFkZGluZzogMTAwcHg7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kOw0KICBwYWRkaW5nLWJvdHRvbTogMzBweDsNCiAgcGFkZGluZy10b3A6IDMwcHg7DQp9DQoNCi50b3AtY2hlIHsNCiAgZm9udC1zaXplOiAzNnB4ICFpbXBvcnRhbnQ7DQogIGZvbnQtd2VpZ2h0OiA2MDA7DQogIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7DQogIHdpZHRoOiAyNTBweDsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBtYXJnaW46IDAgMTVweDsNCn0NCg0KLnRvcC1jaGUgc3BhbiB7DQogIGZvbnQtc2l6ZTogMjBweCAhaW1wb3J0YW50Ow0KfQ0KLnRvcC1jaGUgLmljb24gew0KICBsaW5lLWhlaWdodDogMTAwcHg7DQogIHdpZHRoOiAzNSU7DQogIG1hcmdpbi1yaWdodDogNXB4Ow0KICBjb2xvcjogd2hpdGU7DQp9DQojbWFpbiB7DQogIG1hcmdpbjogMCAxMTBweDsNCiAgd2lkdGg6IGNhbGMoMTAwJSAtIDIyMHB4KTsNCn0NCg=="},{"version":3,"sources":["EchartsPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"EchartsPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"home\" style=\"padding: 15px; height: 60vh\">\r\n    <div style=\"display: flex; justify-content: space-between\">\r\n      <el-card\r\n        class=\"box-card\"\r\n        id=\"main\"\r\n        style=\"width: 30%; margin-left: 110px; margin-right: 0; height: 80vh\"\r\n      >\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>入库摊贩数量</span>\r\n        </div>\r\n        <div class=\"top-che\" style=\"display: flex\">\r\n          <div class=\"icon\" style=\"background: #98bc1f\">\r\n            <i class=\"el-icon-s-claim\"></i>\r\n          </div>\r\n          <div style=\"text-aline: left\">\r\n            <span>入库摊贩数量</span>\r\n            <br />\r\n            <span style=\"font-weight: 400\">{{ tableData.length }}</span>\r\n          </div>\r\n        </div>\r\n      </el-card>\r\n      <el-card\r\n        class=\"box-card\"\r\n        id=\"main\"\r\n        style=\"width: 50%; margin-right: 110px; margin-left: 0px\"\r\n      >\r\n        <div slot=\"header\" class=\"clearfix\">\r\n          <span>摊贩类型占比</span>\r\n        </div>\r\n        <div>\r\n          <div id=\"echarysmain\" style=\"width: 100%; height: 60vh\"></div>\r\n        </div>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport * as echarts from \"echarts\";\r\nimport { mapState } from \"vuex\";\r\nexport default {\r\n  components: {},\r\n  data() {\r\n    return {\r\n      tableData: [],\r\n      DanNum: 0,\r\n\r\n      dialogFormVisible: false,\r\n      form: {\r\n        username: \"\",\r\n        password: \"\",\r\n        checkPass: \"\",\r\n      },\r\n      formLabelWidth: \"120px\",\r\n      nowUser: \"\",\r\n\r\n      userData: [{}],\r\n\r\n      EchartsData: [],\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState([\"todayPrice\"]),\r\n  },\r\n\r\n  async mounted() {\r\n    // this.getData();\r\n    var res = await this.$axios.get(\r\n      \"ShiChangBoothGetData/ShiChangBoothGetData\"\r\n    );\r\n    this.tableData = res.data.data;\r\n\r\n    for (let i = 0; i < this.tableData.length; i++) {\r\n      var index = this.EchartsData.findIndex(\r\n        (ele) => ele.name === this.tableData[i].type\r\n      );\r\n      if (index === -1) {\r\n        this.EchartsData.push({\r\n          name: this.tableData[i].type,\r\n          value: 1,\r\n        });\r\n      } else {\r\n        this.EchartsData[index].value += 1;\r\n      }\r\n    }\r\n    console.log(\"this.tableData\", this.EchartsData);\r\n\r\n    var chartDom = document.getElementById(\"echarysmain\");\r\n    var myChart = echarts.init(chartDom);\r\n    var option;\r\n\r\n    console.log(this.EchartsData);\r\n\r\n    option = {\r\n      tooltip: {\r\n        trigger: \"item\",\r\n      },\r\n      legend: {\r\n        top: \"5%\",\r\n        left: \"center\",\r\n      },\r\n      series: [\r\n        {\r\n          name: \"Access From\",\r\n          type: \"pie\",\r\n          radius: [\"40%\", \"70%\"],\r\n          avoidLabelOverlap: false,\r\n          itemStyle: {\r\n            borderRadius: 10,\r\n            borderColor: \"#fff\",\r\n            borderWidth: 2,\r\n          },\r\n          label: {\r\n            show: false,\r\n            position: \"center\",\r\n          },\r\n          emphasis: {\r\n            label: {\r\n              show: true,\r\n              fontSize: 40,\r\n              fontWeight: \"bold\",\r\n            },\r\n          },\r\n          labelLine: {\r\n            show: false,\r\n          },\r\n          data: this.EchartsData,\r\n        },\r\n      ],\r\n    };\r\n\r\n    option && myChart.setOption(option);\r\n  },\r\n\r\n  async created() {\r\n    this.nowUser = sessionStorage.getItem(\"username\");\r\n  },\r\n  methods: {\r\n    async getData() {\r\n      var res = await this.$axios.get(\r\n        \"ShiChangBoothGetData/ShiChangBoothGetData\"\r\n      );\r\n      this.tableData = res.data.data;\r\n\r\n      for (let i = 0; i < this.tableData.length; i++) {\r\n        var index = this.EchartsData.findIndex(\r\n          (ele) => ele.name === this.tableData[i].type\r\n        );\r\n        if (index === -1) {\r\n          this.EchartsData.push({\r\n            name: this.tableData[i].type,\r\n            value: 1,\r\n          });\r\n        } else {\r\n          this.EchartsData[index].value += 1;\r\n        }\r\n      }\r\n      console.log(\"this.tableData\", this.EchartsData);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.user-data-manage .mani {\r\n  padding: 15px;\r\n}\r\n\r\n.top-box {\r\n  padding: 100px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  padding-bottom: 30px;\r\n  padding-top: 30px;\r\n}\r\n\r\n.top-che {\r\n  font-size: 36px !important;\r\n  font-weight: 600;\r\n  border: 1px solid #ccc;\r\n  width: 250px;\r\n  text-align: center;\r\n  margin: 0 15px;\r\n}\r\n\r\n.top-che span {\r\n  font-size: 20px !important;\r\n}\r\n.top-che .icon {\r\n  line-height: 100px;\r\n  width: 35%;\r\n  margin-right: 5px;\r\n  color: white;\r\n}\r\n#main {\r\n  margin: 0 110px;\r\n  width: calc(100% - 220px);\r\n}\r\n</style>\r\n"]}]}