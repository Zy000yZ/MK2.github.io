{"remainingRequest":"D:\\a-my-html\\html-GIS\\git-develop\\vue-industry-gis\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\a-my-html\\html-GIS\\git-develop\\vue-industry-gis\\src\\views\\HeritageIndustry.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\a-my-html\\html-GIS\\git-develop\\vue-industry-gis\\src\\views\\HeritageIndustry.vue","mtime":1638720228925},{"path":"D:\\a-my-html\\html-GIS\\git-develop\\vue-industry-gis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637922542348},{"path":"D:\\a-my-html\\html-GIS\\git-develop\\vue-industry-gis\\node_modules\\babel-loader\\lib\\index.js","mtime":1637922545947},{"path":"D:\\a-my-html\\html-GIS\\git-develop\\vue-industry-gis\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1637922542348},{"path":"D:\\a-my-html\\html-GIS\\git-develop\\vue-industry-gis\\node_modules\\vue-loader\\lib\\index.js","mtime":1637922546721}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["HeritageIndustry.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"HeritageIndustry.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <!-- 工业遗产 -->\r\n  <div class=\"heritage-industry\">\r\n    <!-- 地图容器 -->\r\n    <div id=\"container\" class=\"container\">\r\n      <div class=\"map-buttons\">\r\n        <!-- 类型搜索start -->\r\n        <el-select\r\n          class=\"typeSelect\"\r\n          v-model=\"typeSelect\"\r\n          placeholder=\"请选择类型\"\r\n          size=\"mini\"\r\n        >\r\n          <el-option\r\n            v-for=\"item in options\"\r\n            :key=\"item.type\"\r\n            :label=\"item.type\"\r\n            :value=\"item.type\"\r\n          >\r\n          </el-option>\r\n        </el-select>\r\n        <el-button\r\n          id=\"selectBtn\"\r\n          class=\"selectBtn\"\r\n          size=\"mini\"\r\n          icon=\"el-icon-search\"\r\n          @click=\"searchTypeClick\"\r\n        ></el-button>\r\n        <!-- 类型搜索end -->\r\n\r\n        <!-- 带有输入建议的搜索框start -->\r\n        <el-autocomplete\r\n          class=\"inline-input\"\r\n          v-model=\"searchIndustry\"\r\n          :fetch-suggestions=\"querySearch\"\r\n          :placeholder=\"\r\n            lang === 'zh_cn' ? '请输入工业遗产名称' : 'Please enter'\r\n          \"\r\n          @select=\"handleSelect\"\r\n          value-key=\"name\"\r\n          size=\"mini\"\r\n          style=\"width: 300px; margin-right: 10px\"\r\n          clearable\r\n        >\r\n          <el-button\r\n            slot=\"append\"\r\n            icon=\"el-icon-search\"\r\n            @click=\"searchIndustryCli\"\r\n          ></el-button>\r\n        </el-autocomplete>\r\n        <!-- 带有输入建议的搜索框end -->\r\n\r\n        <el-button\r\n          v-show=\"!geometryBox\"\r\n          size=\"mini\"\r\n          @click=\"opengeometryBox\"\r\n          class=\"map-btn map-element\"\r\n          >{{ lang === \"zh_cn\" ? \"几何查询\" : \"Geometric query\" }}</el-button\r\n        >\r\n        <el-button\r\n          v-show=\"geometryBox\"\r\n          size=\"mini\"\r\n          @click=\"closegeometryBox\"\r\n          class=\"map-btn map-element closegeometryBox\"\r\n          >{{ lang === \"zh_cn\" ? \"关闭面板\" : \"Close panel\" }}</el-button\r\n        >\r\n\r\n        <el-button\r\n          size=\"mini\"\r\n          @click=\"addRoadLayer\"\r\n          v-show=\"!roadNetwork\"\r\n          class=\"map-btn map-element\"\r\n          >{{ lang === \"zh_cn\" ? \"打开路网\" : \"Open road\" }}</el-button\r\n        >\r\n        <el-button\r\n          size=\"mini\"\r\n          @click=\"removeRoadLayer\"\r\n          v-show=\"roadNetwork\"\r\n          class=\"map-btn map-element\"\r\n          >{{ lang === \"zh_cn\" ? \"关闭路网\" : \"Close road\" }}</el-button\r\n        >\r\n\r\n        <el-button\r\n          size=\"mini\"\r\n          @click=\"addSatellite\"\r\n          v-show=\"isOrdMap\"\r\n          class=\"map-btn map-element\"\r\n          >{{ lang === \"zh_cn\" ? \"卫星地图\" : \"Satellite map\" }}</el-button\r\n        >\r\n        <el-button\r\n          size=\"mini\"\r\n          @click=\"removeSatellite\"\r\n          v-show=\"!isOrdMap\"\r\n          class=\"map-btn map-element\"\r\n          >{{ lang === \"zh_cn\" ? \"普通地图\" : \"General map\" }}</el-button\r\n        >\r\n\r\n        <el-button size=\"mini\" @click=\"resetMap\" class=\"map-btn map-element\">{{\r\n          lang === \"zh_cn\" ? \"复位\" : \"Reset\"\r\n        }}</el-button>\r\n      </div>\r\n\r\n      <!-- 几何查询弹框 -->\r\n      <div v-show=\"geometryBox\" class=\"geometrySearch\">\r\n        <el-radio-group v-model=\"geometrySearchType\">\r\n          <span class=\"geometryType\"\r\n            >{{\r\n              lang === \"zh_cn\"\r\n                ? \"请选择绘制的几何元素类型\"\r\n                : \"Please select the type of geometric element to draw\"\r\n            }}<el-popover\r\n              placement=\"top-start\"\r\n              :title=\"lang === 'zh_cn' ? '提示' : 'Tips'\"\r\n              width=\"200\"\r\n              trigger=\"hover\"\r\n              style=\"font-size: 10px\"\r\n              :content=\"\r\n                lang === 'zh_cn'\r\n                  ? '每次选择完元素类型后点击绘制元素按钮进行绘制，每次选择后可绘制一次，如要再次绘制请重新选择。'\r\n                  : 'After selecting the element type each time, click the draw element button to draw. You can draw once after each selection. If you want to draw again, please select again.'\r\n              \"\r\n            >\r\n              <i slot=\"reference\" class=\"el-icon-question\"></i>\r\n              <!-- <el-button slot=\"reference\">hover 激活</el-button> -->\r\n            </el-popover>\r\n          </span>\r\n          <br />\r\n          <el-radio :label=\"'circle'\">{{\r\n            lang === \"zh_cn\" ? \"绘制圆形\" : \"circle\"\r\n          }}</el-radio>\r\n          <el-radio :label=\"'rectangle'\">{{\r\n            lang === \"zh_cn\" ? \"绘制矩形\" : \"rectangle\"\r\n          }}</el-radio>\r\n          <el-radio :label=\"'polygon'\">{{\r\n            lang === \"zh_cn\" ? \"绘制多边形\" : \"polygon\"\r\n          }}</el-radio>\r\n        </el-radio-group>\r\n        <div class=\"geometryBtns\">\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"drawGeometry\"\r\n            class=\"map-btn map-element\"\r\n            >{{ lang === \"zh_cn\" ? \"绘制元素\" : \"Draw element\" }}</el-button\r\n          >\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"clearDrawGeometry\"\r\n            class=\"map-btn map-element\"\r\n            >{{ lang === \"zh_cn\" ? \"清除\" : \"Clear\" }}</el-button\r\n          >\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            @click=\"closeDraw\"\r\n            class=\"map-btn map-element\"\r\n            >{{\r\n              lang === \"zh_cn\" ? \"清除并关闭面板\" : \"Clear and close\"\r\n            }}</el-button\r\n          >\r\n\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            v-show=\"issearchRes\"\r\n            @click=\"changeissearchRes\"\r\n            class=\"map-btn map-element\"\r\n            >{{ lang === \"zh_cn\" ? \"关闭结果\" : \"Close result\" }}</el-button\r\n          >\r\n          <el-button\r\n            size=\"mini\"\r\n            type=\"primary\"\r\n            v-show=\"!issearchRes\"\r\n            @click=\"changeissearchRes\"\r\n            class=\"map-btn map-element\"\r\n            >{{ lang === \"zh_cn\" ? \"打开结果\" : \"Open result\" }}</el-button\r\n          >\r\n        </div>\r\n        <!-- 查询数据结果 -->\r\n        <div class=\"searchRes\" v-show=\"issearchRes\">\r\n          <el-table\r\n            :data=\"geometrySearchRes\"\r\n            height=\"250\"\r\n            border\r\n            style=\"width: 100%\"\r\n          >\r\n            <el-table-column type=\"expand\">\r\n              <template slot-scope=\"props\">\r\n                <el-form\r\n                  style=\"font-size: 12px\"\r\n                  label-position=\"left\"\r\n                  inline\r\n                  class=\"demo-table-expand\"\r\n                >\r\n                  <el-form-item\r\n                    :label=\"lang === 'zh_cn' ? '遗产名称' : 'Heritage'\"\r\n                  >\r\n                    <span>{{ props.row.name }}</span>\r\n                  </el-form-item>\r\n                  <el-form-item\r\n                    :label=\"lang === 'zh_cn' ? '遗产地址' : 'Address'\"\r\n                  >\r\n                    <span>{{ props.row.address }}</span>\r\n                  </el-form-item>\r\n                  <el-form-item\r\n                    :label=\"lang === 'zh_cn' ? '单位名称' : 'Company'\"\r\n                  >\r\n                    <span>{{ props.row.company }}</span>\r\n                  </el-form-item>\r\n                  <el-form-item\r\n                    :label=\"lang === 'zh_cn' ? '始建时间' : 'Start'\"\r\n                  >\r\n                    <span>{{ props.row.start }}</span>\r\n                  </el-form-item>\r\n                  <el-form-item\r\n                    :label=\"\r\n                      lang === 'zh_cn' ? '工业类别' : 'Industrial category'\r\n                    \"\r\n                  >\r\n                    <span>{{ props.row.type }}</span>\r\n                  </el-form-item>\r\n                  <!-- <el-form-item label=\"所属店铺\">\r\n                    <span>{{ props.row.shop }}</span>\r\n                  </el-form-item> -->\r\n                </el-form>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"start\"\r\n              :label=\"lang === 'zh_cn' ? '建于' : 'Start'\"\r\n              width=\"70\"\r\n            >\r\n            </el-table-column>\r\n            <el-table-column\r\n              prop=\"name\"\r\n              :label=\"lang === 'zh_cn' ? '遗产名称' : 'Heritage name'\"\r\n            >\r\n            </el-table-column>\r\n            <el-table-column\r\n              :label=\"lang === 'zh_cn' ? '查看详情' : 'Details'\"\r\n              width=\"80\"\r\n            >\r\n              <template slot-scope=\"row\">\r\n                <el-button type=\"text\" size=\"mini\" @click=\"lookthis(row)\">{{\r\n                  lang === \"zh_cn\" ? \"查看\" : \"More\"\r\n                }}</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script type=\"text/javascript\" src=\"https://webapi.amap.com/maps?v=1.4.15&key=2eccb47b400c8ab58f2dc596dbfe9d53&plugin=AMap.MouseTool,AMap.DistrictSearch\"></script>\r\n<script>\r\nimport { mapState, mapMutations } from \"vuex\";\r\nexport default {\r\n  name: \"HeritageIndustry\",\r\n\r\n  data() {\r\n    return {\r\n      map: \"\",\r\n      district: null,\r\n      polygons: [],\r\n      zoom: 10,\r\n      marker: null, //工业遗产点位\r\n\r\n      // 弹框内容\r\n      title: \"\",\r\n      content: [],\r\n      infoWindow: null,\r\n\r\n      dataList: null, // 工业遗产数据\r\n      isOrdMap: true, //判断是卫星图还是普通图，普通图为true\r\n      satellite: null, //用来存储卫星地图影像\r\n      roadNetwork: false, //是否具有路网，默认没有\r\n      roadNetLayer: null, //用来存储路网\r\n\r\n      // 带有输入建议的搜索框\r\n      restaurants: [],\r\n      searchIndustry: \"\",\r\n      searchObj: null,\r\n      markers: [],\r\n\r\n      // 几何查询\r\n      geometrySearchType: \"circle\",\r\n      geometryBox: false, //几何查询面板隐藏展示\r\n      mouseTool: null,\r\n      overlays: [], //绘制好的覆盖物\r\n      geometrySearchRes: [], //几何查询结果\r\n      issearchRes: true, //查询结果图标显示隐藏\r\n\r\n      // 类型查询\r\n      options: [\r\n        {\r\n          type: \"全部类型\",\r\n        },\r\n      ],\r\n      typeSelect: \"全部类型\",\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    ...mapState([\"lang\"]),\r\n  },\r\n  async created() {\r\n    var res = await this.$axios.get(\"/getHeritageMainData/getHeritageMainData\");\r\n    this.dataList = res.data.data;\r\n\r\n    this.getAllType(); //初始化下拉菜单\r\n    this.changeinstryType(\"one\");\r\n  },\r\n\r\n  mounted() {\r\n    this.initMap(); //初始化地图\r\n\r\n    // this.disSearch();\r\n    this.addMarker();\r\n    this.drawBounds();\r\n    this.mouseTool = new AMap.MouseTool(this.map);\r\n\r\n    // console.log(\"test\", this.map.getZoom());\r\n    // this.mapZoom();\r\n\r\n    // console.log(\"返回所有覆盖物\", this.map.getAllOverlays(\"marker\"));\r\n  },\r\n\r\n  methods: {\r\n    ...mapMutations([\"changeinstryType\"]),\r\n\r\n    initMap() {\r\n      //初始化地图\r\n      this.map = new AMap.Map(\"container\", {\r\n        resizeEnable: true,\r\n        zoom: this.zoom, //级别\r\n        zooms: [6.5, 18],\r\n        center: [115.464523, 38.874476], //中心点坐标\r\n        viewMode: \"3D\", //使用3D视图\r\n        lang: this.lang,\r\n        mapStyle: \"amap://styles/fresh\",\r\n        infoWindow: null,\r\n      });\r\n    },\r\n\r\n    // 裁剪边界\r\n    drawBounds() {\r\n      if (!this.district) {\r\n        //实例化DistrictSearch\r\n        var opts = {\r\n          subdistrict: 0, //获取边界不需要返回下级行政区\r\n          extensions: \"all\", //返回行政区边界坐标组等具体信息\r\n          level: \"province\", //查询行政级别为 市\r\n        };\r\n        this.district = new AMap.DistrictSearch(opts);\r\n      }\r\n      this.district.setLevel(\"province\");\r\n      var _this = this;\r\n      this.district.search(\"河北省\", function (status, result) {\r\n        // 河北省边界\r\n        // var bounds = result.districtList[0].boundaries;\r\n        // console.log(result);\r\n        // console.log(status);\r\n\r\n        var outer = [\r\n          new AMap.LngLat(-360, 90, true),\r\n          new AMap.LngLat(-360, -90, true),\r\n          new AMap.LngLat(360, -90, true),\r\n          new AMap.LngLat(360, 90, true),\r\n        ];\r\n        var holes = result.districtList[0].boundaries;\r\n\r\n        var pathArray = [outer];\r\n        pathArray.push.apply(pathArray, holes);\r\n        var polygon = new AMap.Polygon({\r\n          pathL: pathArray,\r\n          strokeColor: \"#F9D5A7\",\r\n          strokeWeight: 1,\r\n          fillColor: \"#F9D5A7\",\r\n          fillOpacity: 0.2,\r\n        });\r\n        polygon.setPath(pathArray);\r\n        _this.map.add(polygon);\r\n      });\r\n    },\r\n\r\n    // 添加工业遗产点集\r\n    async addMarker() {\r\n      var res = await this.$axios.get(\r\n        \"/getHeritageMainData/getHeritageMainData\"\r\n      );\r\n      // console.log(\"请求结果\", res);\r\n      this.dataList = res.data.data;\r\n      this.restaurants = res.data.data; //绑定输入建议数据\r\n      console.log(\"请求结果\", this.dataList);\r\n\r\n      for (let i = 0; i < this.dataList.length; i++) {\r\n        // 循环点坐标\r\n        // 注意这里一定得用 let\r\n        let marker = new AMap.Marker({\r\n          map: this.map,\r\n          position: this.dataList[i].coordinate,\r\n          extData: this.dataList[i],\r\n        });\r\n\r\n        this.markers.push(marker);\r\n\r\n        AMap.event.addListener(marker, \"click\", () => {\r\n          // this.nowMarker = marker;\r\n\r\n          // console.log(this.infoWindow);\r\n          this.title =\r\n            this.dataList[i].name +\r\n            '<span style=\"font-size:11px;\">建于：' +\r\n            this.dataList[i].start +\r\n            \"</span>\";\r\n\r\n          (this.content = [\r\n            \"<img src='\" +\r\n              this.dataList[i].mainImage +\r\n              \"'style='wtdth:100px;height:auto;'>地址：\" +\r\n              this.dataList[i].address,\r\n            // \"单位名称：\" + this.dataList[i].company,\r\n            \"工业类别：\" + this.dataList[i].type,\r\n            `<a href=\"#/heritage/industry/main/` +\r\n              this.dataList[i]._id +\r\n              `\" class=\"xiangxi\">详细信息</a>`,\r\n          ]),\r\n            (this.infoWindow = new AMap.InfoWindow({\r\n              isCustom: true, //使用自定义窗体\r\n              // content: '  <div style=\"background-color:white\">111</div>',\r\n              content: this.createInfoWindow(\r\n                this.title,\r\n                this.content.join(\"<br/>\")\r\n              ),\r\n              offset: new AMap.Pixel(16, -45),\r\n            }));\r\n          this.infoWindow.open(this.map, marker.getPosition());\r\n          // console.log(marker.getPosition());\r\n        });\r\n      }\r\n    },\r\n\r\n    //渲染遗产弹框\r\n    createInfoWindow(title, content) {\r\n      // console.log(\"11111111\");\r\n      var info = document.createElement(\"div\");\r\n      info.className = \"custom-info input-card content-window-card\";\r\n\r\n      //可以通过下面的方式修改自定义窗体的宽高\r\n      //info.style.width = \"400px\";\r\n      // 定义顶部标题\r\n      var top = document.createElement(\"div\");\r\n      var titleD = document.createElement(\"div\");\r\n      var closeX = document.createElement(\"img\");\r\n      top.className = \"info-top\";\r\n      titleD.innerHTML = title;\r\n      closeX.src = \"https://webapi.amap.com/images/close2.gif\";\r\n      closeX.onclick = this.closeInfoWindow;\r\n\r\n      top.appendChild(titleD);\r\n      top.appendChild(closeX);\r\n      info.appendChild(top);\r\n\r\n      // 定义中部内容\r\n      var middle = document.createElement(\"div\");\r\n      middle.className = \"info-middle\";\r\n      middle.style.backgroundColor = \"white\";\r\n      middle.innerHTML = content;\r\n      info.appendChild(middle);\r\n\r\n      // 定义底部内容\r\n      var bottom = document.createElement(\"div\");\r\n      bottom.className = \"info-bottom\";\r\n      bottom.style.position = \"relative\";\r\n      bottom.style.top = \"0px\";\r\n      bottom.style.margin = \"0 auto\";\r\n      var sharp = document.createElement(\"img\");\r\n      sharp.src = \"https://webapi.amap.com/images/sharp.png\";\r\n      bottom.appendChild(sharp);\r\n      info.appendChild(bottom);\r\n      return info;\r\n    },\r\n\r\n    // 关闭遗产弹框\r\n    closeInfoWindow() {\r\n      this.map.clearInfoWindow();\r\n      this.searchIndustry = null;\r\n    },\r\n\r\n    // 打开卫星地图\r\n    addSatellite() {\r\n      // console.log(111);\r\n      this.isOrdMap = !this.isOrdMap;\r\n      this.satellite = new AMap.TileLayer.Satellite();\r\n      this.map.add(this.satellite);\r\n    },\r\n\r\n    // 关闭卫星地图\r\n    removeSatellite() {\r\n      this.isOrdMap = !this.isOrdMap;\r\n      this.map.remove(this.satellite);\r\n    },\r\n\r\n    // 打开路网\r\n    addRoadLayer() {\r\n      this.roadNetwork = !this.roadNetwork;\r\n      this.roadNetLayer = new AMap.TileLayer.RoadNet();\r\n      this.map.add(this.roadNetLayer);\r\n    },\r\n\r\n    // 关闭路网\r\n    removeRoadLayer() {\r\n      this.roadNetwork = !this.roadNetwork;\r\n      this.map.remove(this.roadNetLayer);\r\n    },\r\n    // 输入建议start\r\n    handleSelect(item) {\r\n      console.log(item);\r\n      this.searchObj = item;\r\n      console.log(this.searchIndustry);\r\n    },\r\n\r\n    querySearch(queryString, cb) {\r\n      var restaurants = this.restaurants;\r\n      var results = queryString\r\n        ? restaurants.filter(this.createFilter(queryString))\r\n        : restaurants;\r\n      // 调用 callback 返回建议列表的数据\r\n      cb(results);\r\n    },\r\n    createFilter(queryString) {\r\n      return (restaurant) => {\r\n        return (\r\n          restaurant.name.toLowerCase().indexOf(queryString.toLowerCase()) === 0\r\n        );\r\n      };\r\n    },\r\n\r\n    // 点击搜索按钮\r\n    searchIndustryCli() {\r\n      // var targetMarker;\r\n      // console.log(\"markers\", this.markers[1].getExtData());\r\n      // var res = this.markers.find((ele) => {\r\n      //   console.log(ele.getExtData()._id);\r\n      //   console.log(this.searchObj._id);\r\n      //   return (ele.getExtData()._id = this.searchObj._id);\r\n      // });\r\n      // console.log(index);\r\n\r\n      // console.log(this.markers[index]);\r\n      this.addMarker();\r\n      var title =\r\n        this.searchObj.name +\r\n        '<span style=\"font-size:11px;\">建于：' +\r\n        this.searchObj.start +\r\n        \"</span>\";\r\n      var content = [\r\n        \"<img src='\" +\r\n          this.searchObj.mainImage +\r\n          \"'style='wtdth:100px;height:auto;'>地址：\" +\r\n          this.searchObj.address,\r\n        // \"单位名称：\" + this.searchObj.company,\r\n        \"工业类别：\" + this.searchObj.type,\r\n        `<a href=\"#/heritage/industry/main/` +\r\n          this.searchObj._id +\r\n          `\" class=\"\">详细信息</a>`,\r\n      ];\r\n\r\n      var infoWindow = new AMap.InfoWindow({\r\n        position: this.searchObj.coordinate,\r\n        isCustom: true, //使用自定义窗体\r\n        // content: '  <div style=\"background-color:white\">111</div>',\r\n        content: this.createInfoWindow(title, content.join(\"<br/>\")),\r\n        offset: new AMap.Pixel(16, -45),\r\n      });\r\n      // infoWindow.open(this.map, marker.getPosition());\r\n      // console.log(marker.getPosition());\r\n      infoWindow.open(this.map);\r\n\r\n      this.map.setCenter(this.searchObj.coordinate); //设置地图中心点为当前位置\r\n    },\r\n    // 输入建议end\r\n\r\n    // 复位事件\r\n    resetMap() {\r\n      location.reload();\r\n      // this.map.setCenter([115.464523, 38.874476]);\r\n    },\r\n\r\n    // 几何查询函数系列start\r\n    opengeometryBox() {\r\n      this.geometryBox = !this.geometryBox;\r\n    },\r\n    closegeometryBox() {\r\n      this.geometryBox = !this.geometryBox;\r\n    },\r\n    // 集合查询函数系列start\r\n\r\n    drawGeometry() {\r\n      // if (this.geometrySearchType === \"Rectangle\") {\r\n\r\n      if (!this.geometrySearchType) {\r\n        this.$message({\r\n          message: \"请先选择几何元素类型再开始绘制\",\r\n          type: \"warning\",\r\n        });\r\n      }\r\n\r\n      console.log(this.geometrySearchType);\r\n      switch (this.geometrySearchType) {\r\n        case \"polygon\": {\r\n          this.mouseTool.polygon({\r\n            fillColor: \"#00b0ff\",\r\n            strokeColor: \"#80d8ff\",\r\n            //同Polygon的Option设置\r\n          });\r\n          break;\r\n        }\r\n        case \"rectangle\": {\r\n          this.mouseTool.rectangle({\r\n            fillColor: \"#00b0ff\",\r\n            strokeColor: \"#80d8ff\",\r\n            //同Polygon的Option设置\r\n          });\r\n          break;\r\n        }\r\n        case \"circle\": {\r\n          this.mouseTool.circle({\r\n            fillColor: \"#00b0ff\",\r\n            strokeColor: \"#80d8ff\",\r\n            //同Circle的Option设置\r\n          });\r\n          break;\r\n        }\r\n      }\r\n      // this.mouseTool.close(); //关闭，并清除覆盖物\r\n      this.mouseTool.on(\"draw\", (e) => {\r\n        this.overlays.push(e.obj);\r\n        // console.log(\"e.obj---------\", e.obj.contains([115.638353, 39.004825]));\r\n\r\n        // 遍历点位，判断是否在范围内\r\n        for (let i = 0; i < this.dataList.length; i++) {\r\n          if (e.obj.contains(this.dataList[i].coordinate)) {\r\n            if (\r\n              !this.geometrySearchRes.some(\r\n                (ele) => ele.name === this.dataList[i].name\r\n              )\r\n            ) {\r\n              this.geometrySearchRes.push(this.dataList[i]);\r\n            }\r\n          }\r\n        }\r\n        // console.log(\"几何查询结果geometrySearchRes\", this.geometrySearchRes);\r\n        this.mouseTool.close(); //关闭\r\n        this.geometrySearchType = null;\r\n      }); //解除绑定，\r\n    },\r\n\r\n    clearDrawGeometry() {\r\n      this.mouseTool.close(true);\r\n      this.geometrySearchRes = [];\r\n    },\r\n    closeDraw() {\r\n      this.mouseTool.close(true);\r\n      this.geometryBox = false;\r\n\r\n      this.geometrySearchRes = [];\r\n    },\r\n\r\n    changeissearchRes() {\r\n      this.issearchRes = !this.issearchRes;\r\n    },\r\n\r\n    // 查询结果跳转详情\r\n    lookthis(row) {\r\n      console.log(row);\r\n      // this.$router.push({\r\n      //   name: `industryMain`,\r\n      //   params: { heritage: row._id },\r\n      // });\r\n      this.$router.push(\"/heritage/industry/main/\" + row.row._id);\r\n    },\r\n\r\n    // 类型查询start\r\n    async getAllType() {\r\n      // var res = await this.$axios.get(\r\n      //   \"/getHeritageMainData/getHeritageMainData\"\r\n      // );\r\n      // res = res.data.data;\r\n      // console.log(\"请求结果\", res);\r\n      // this.dataList = res.data.data;\r\n      // console.log(this.dataList);\r\n\r\n      for (let i = 0; i < this.dataList.length; i++) {\r\n        if (!this.options.some((ele) => ele.type === this.dataList[i].type)) {\r\n          this.options.push(this.dataList[i]);\r\n        }\r\n      }\r\n      console.log(this.options);\r\n    },\r\n\r\n    searchTypeClick() {\r\n      console.log(this.typeSelect);\r\n      this.map.remove(this.markers);\r\n      this.map.clearInfoWindow();\r\n      if (this.typeSelect === \"全部类型\") {\r\n        this.addMarker();\r\n      } else {\r\n        var filEnd = this.dataList.filter(\r\n          (ele) => ele.type === this.typeSelect\r\n        );\r\n        console.log(filEnd);\r\n        // this.map.clearMap();\r\n        for (let i = 0; i < filEnd.length; i++) {\r\n          // 循环点坐标\r\n          // 注意这里一定得用 let\r\n          let marker = new AMap.Marker({\r\n            map: this.map,\r\n            position: filEnd[i].coordinate,\r\n            extData: filEnd[i],\r\n          });\r\n\r\n          this.markers.push(marker);\r\n\r\n          AMap.event.addListener(marker, \"click\", () => {\r\n            // this.nowMarker = marker;\r\n\r\n            // console.log(this.infoWindow);\r\n            this.title =\r\n              filEnd[i].name +\r\n              '<span style=\"font-size:11px;\">建于：' +\r\n              filEnd[i].start +\r\n              \"</span>\";\r\n\r\n            (this.content = [\r\n              \"<img src='\" +\r\n                filEnd[i].mainImage +\r\n                \"'style='wtdth:100px;height:auto;'>地址：\" +\r\n                filEnd[i].address,\r\n              // \"单位名称：\" + filEnd[i].company,\r\n              \"工业类别：\" + filEnd[i].type,\r\n              `<a href=\"#/heritage/industry/main/` +\r\n                filEnd[i]._id +\r\n                `\" class=\"xiangxi\">详细信息</a>`,\r\n            ]),\r\n              (this.infoWindow = new AMap.InfoWindow({\r\n                isCustom: true, //使用自定义窗体\r\n                // content: '  <div style=\"background-color:white\">111</div>',\r\n                content: this.createInfoWindow(\r\n                  this.title,\r\n                  this.content.join(\"<br/>\")\r\n                ),\r\n                offset: new AMap.Pixel(16, -45),\r\n              }));\r\n            this.infoWindow.open(this.map, marker.getPosition());\r\n            // console.log(marker.getPosition());\r\n          });\r\n        }\r\n        // this.map.setFitView();\r\n        // AMap.event.addDomListener(\r\n        //   document.getElementById(\"selectBtn\"),\r\n        //   \"click\",\r\n        //   () => {\r\n        //     this.map.setFitView();\r\n        //   }\r\n        // );\r\n      }\r\n    },\r\n    // 类型查询end\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.heritage-industry #container {\r\n  border-bottom: 1px solid #f9d5a7;\r\n}\r\n/* 弹框样式 */\r\n.content-window-card {\r\n  position: relative;\r\n  box-shadow: none;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: auto;\r\n  padding: 0;\r\n}\r\n\r\n.content-window-card p {\r\n  height: 2rem;\r\n}\r\n\r\n.custom-info {\r\n  border: solid 1px silver;\r\n  width: 280px;\r\n  background-color: white;\r\n}\r\n\r\ndiv.info-top {\r\n  position: relative;\r\n  background: none repeat scroll 0 0 #f9f9f9;\r\n  border-bottom: 1px solid #ccc;\r\n  border-radius: 5px 5px 0 0;\r\n}\r\n\r\ndiv.info-top div {\r\n  display: inline-block;\r\n  color: #333333;\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  line-height: 31px;\r\n  padding: 0 10px;\r\n}\r\n\r\ndiv.info-top img {\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  transition-duration: 0.25s;\r\n}\r\n\r\ndiv.info-middle {\r\n  font-size: 12px;\r\n  padding: 10px 6px;\r\n  line-height: 20px;\r\n}\r\ndiv.info-middle img {\r\n  width: 100px;\r\n  height: 70px;\r\n  padding-bottom: 10px;\r\n}\r\n\r\ndiv.info-bottom {\r\n  height: 0px;\r\n  width: 100%;\r\n  clear: both;\r\n  text-align: center;\r\n}\r\n\r\ndiv.info-bottom img {\r\n  position: relative;\r\n  z-index: 104;\r\n}\r\n\r\nspan {\r\n  margin-left: 5px;\r\n  font-size: 11px;\r\n}\r\n\r\n.info-middle img {\r\n  float: left;\r\n  margin-right: 6px;\r\n}\r\n\r\n.xiangxi {\r\n  color: #555;\r\n}\r\n\r\n/* 地图元件样式 */\r\n\r\n.heritage-industry .map-buttons {\r\n  padding: 15px;\r\n  z-index: 999;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n}\r\n\r\n.heritage-industry .geometrySearch {\r\n  position: absolute;\r\n  top: 60px;\r\n  right: 0;\r\n  z-index: 999;\r\n  background-color: white;\r\n  padding: 15px;\r\n  border-radius: 5px;\r\n  margin-right: 15px;\r\n  border: 1px solid #dcdfe6;\r\n}\r\n\r\n.heritage-industry .geometrySearch .geometryType {\r\n  display: block;\r\n  padding-bottom: 15px;\r\n  color: #606266;\r\n}\r\n.heritage-industry .geometrySearch .geometryBtns {\r\n  padding-top: 15px;\r\n}\r\n\r\n.heritage-industry .map-buttons .closegeometryBox {\r\n  margin-left: 0;\r\n}\r\n\r\n.heritage-industry .geometrySearch .searchRes {\r\n  padding-top: 15px;\r\n}\r\n\r\n.heritage-industry .geometrySearch .searchRes .el-form-item__label {\r\n  font-size: 12px;\r\n  color: #111;\r\n}\r\n.heritage-industry .geometrySearch .searchRes .el-form-item {\r\n  margin: 0;\r\n  padding-left: 10px;\r\n}\r\n.heritage-industry .map-buttons .el-input__inner {\r\n  border-top-right-radius: 0px;\r\n  border-bottom-right-radius: 0px;\r\n  border-right: none;\r\n}\r\n.heritage-industry .map-buttons .selectBtn {\r\n  border-top-left-radius: 0px;\r\n  border-bottom-left-radius: 0px;\r\n  margin-right: 10px;\r\n}\r\n</style>"]}]}